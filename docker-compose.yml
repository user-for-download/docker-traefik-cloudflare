version: "3.9"

name: traefik

networks:
  t2_proxy:
    name: t2_proxy
    external: true

  socket_proxy:
    name: socket_proxy
    external: true

services:
  # Docker Socket Proxy
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    networks:
      socket_proxy:
        ipv4_address: 172.16.91.254
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    security_opt: [no-new-privileges:true]
    restart: always
    environment:
      - LOG_LEVEL=info 
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Watchtower
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portainer
      - VOLUMES=1 # Portainer

  # traefik
  traefik:
    container_name: traefik
    image: traefik
    networks:
      t2_proxy:
        ipv4_address: 172.16.90.254 
      socket_proxy:
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - $APPDIR/traefik/acme/acme.json:/acme.json
      - $APPDIR/traefik/traefik.toml:/etc/traefik/traefik.toml
      - $APPDIR/traefik/rules:/etc/traefik/rules
      - $DOCKERDIR/logs/traefik:/logs
    environment:
      - TZ=$TZ
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
      - DOMAINNAME_CLOUD_SERVER
    security_opt: [no-new-privileges:true]
    restart: always
    depends_on: [socket-proxy]
    labels:
      traefik.enable: true
      traefik.http.routers.traefik-rtr.entrypoints: https
      traefik.http.routers.traefik-rtr.rule: Host(`$TRAEFIK_DOMAINNAME`)
      traefik.http.routers.traefik-rtr.tls.certresolver: dns-cloudflare
      traefik.http.routers.traefik-rtr.tls.domains[0].main: "$DOMAINNAME"
      traefik.http.routers.traefik-rtr.tls.domains[0].sans: "*.$DOMAINNAME"
      #traefik.http.routers.traefik-rtr.middlewares: middlewares-authelia@file
      traefik.http.routers.traefik-rtr.tls: true
      traefik.http.routers.traefik-rtr.service: api@internal
      org.label-schema.group: "monitoring"