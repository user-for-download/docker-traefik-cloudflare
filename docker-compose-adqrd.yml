version: "3.9"

name: adquard

volumes:
  adquard_data: {}

networks:
  t2_proxy:
    name: t2_proxy
    external: true
  ad_mntr:
    name: ad_mntr
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.100.32/28

services:
  # use /opt/adguardhome/vol/certs/private/<SITE>.key
  # use /opt/adguardhome/vol/certs/certs/<SITE>.crt
  traefik-certs-dumper:
    container_name: traefik-certs-dumper
    image: ldez/traefik-certs-dumper
    networks: [ ad_mntr ]
    security_opt: [ no-new-privileges:true ]
    restart: unless-stopped
    entrypoint: sh -c ' apk add jq ; while ! [ -e acme.json ] || ! [ `jq ".[] | .Certificates | length" acme.json` != 0 ]; do sleep 1 ; done && traefik-certs-dumper file --version v2 --watch --source acme.json --dest /data/certs'
    volumes:
      - $APPDIR/traefik/acme/acme.json:/acme.json
      - adquard_data:/data

  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    restart: unless-stopped
    networks: [ t2_proxy, ad_mntr ]
    security_opt: [ no-new-privileges:true ]
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDIR/adguardhome/conf:/opt/adguardhome/conf
      - $APPDIR/adguardhome/work:/opt/adguardhome/work
      - adquard_data:/opt/adguardhome/vol
    expose:
      - 80
      - 443
    labels:
      traefik.enable: true
      traefik.tcp.routers.adg-rtr.rule: HostSNI(`$DNS_DOMAINNAME`)
      traefik.tcp.routers.adg-rtr.service: adg-svc
      traefik.tcp.routers.adg-rtr.tls.passthrough: true
      traefik.tcp.services.adg-svc.loadbalancer.server.port: 443 # (3000 for first run)
      # traefik.tcp.routers.adg-rtr.middlewares: middlewares-authelia@file
      org.label-schema.group: "monitoring"
